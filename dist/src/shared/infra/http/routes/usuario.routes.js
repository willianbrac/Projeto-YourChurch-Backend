"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usuarioRoutes = void 0;
const express_1 = require("express");
const AdminUpdateUsuarioController_1 = require("../../../../modules/accounts/useCases/AdminUpdateUsuario/AdminUpdateUsuarioController");
const CreateUsuarioController_1 = require("../../../../modules/accounts/useCases/CreateUsuario/CreateUsuarioController");
const DeleteUsuarioController_1 = require("../../../../modules/accounts/useCases/DeleteUsuario/DeleteUsuarioController");
const ListUniqueUsuarioController_1 = require("../../../../modules/accounts/useCases/ListUsuario/ListUniqueUsuarioController");
const ListUsuarioController_1 = require("../../../../modules/accounts/useCases/ListUsuarios/ListUsuarioController");
const UpdateSenhaUsuarioController_1 = require("../../../../modules/accounts/useCases/UpdateSenhaUsuario/UpdateSenhaUsuarioController");
const UpdateUsuarioController_1 = require("../../../../modules/accounts/useCases/UpdateUsuario/UpdateUsuarioController");
const ensureAdmin_1 = require("../middlewares/ensureAdmin");
const ensureAuthenticated_1 = require("../middlewares/ensureAuthenticated");
const ensureisAdminAndUsuarioComum_1 = require("../middlewares/ensureisAdminAndUsuarioComum");
const usuarioRoutes = express_1.Router();
exports.usuarioRoutes = usuarioRoutes;
const createUsuarioController = new CreateUsuarioController_1.CreateUsuarioController();
const listUsuarioController = new ListUsuarioController_1.ListUsuarioController();
const listUniqueUsuarioController = new ListUniqueUsuarioController_1.ListUniqueUsuarioController();
const deleteUsuarioController = new DeleteUsuarioController_1.DeleteUsuarioController();
const updateUsuarioController = new UpdateUsuarioController_1.UpdateUsuarioController();
const updateSenhaUsuarioController = new UpdateSenhaUsuarioController_1.UpdateSenhaUsuarioController();
const adminUpdateUsuarioController = new AdminUpdateUsuarioController_1.AdminUpdateUsuarioController();
usuarioRoutes.use(ensureAuthenticated_1.ensureAuthenticated);
usuarioRoutes.post("/", createUsuarioController.handler);
usuarioRoutes.put("/update", ensureAuthenticated_1.ensureAuthenticated, ensureisAdminAndUsuarioComum_1.ensureisAdminAndUsuarioComum, updateUsuarioController.handler);
usuarioRoutes.put("/admin/:id_usuario", ensureAuthenticated_1.ensureAuthenticated, ensureAdmin_1.ensureAdministrator, adminUpdateUsuarioController.handler);
usuarioRoutes.put("/senha", ensureAuthenticated_1.ensureAuthenticated, updateSenhaUsuarioController.handler);
usuarioRoutes.get("/", listUsuarioController.handler);
usuarioRoutes.delete("/:id", deleteUsuarioController.handler);
usuarioRoutes.get("/:id", listUniqueUsuarioController.handler);
